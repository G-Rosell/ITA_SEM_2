@page "/todo"
@using System.Text.Json
@inject IJSRuntime JSRuntime

<h3>ToDo</h3>

<ul>
    @foreach (var todo in todos)
    {
        <li>
            <input type="checkbox" @bind="todo.IsDone" /> @todo.Title
        </li>
    }
</ul>

<input @bind="newTodo" placeholder="Noget nyt at gøre..." />
<button @onclick="AddTodo">Tilføj</button>

@code {
    private List<TodoItem> todos = new List<TodoItem>();
    private string newTodo = "";

    protected override async Task OnInitializedAsync()
    {
        var storedTodos = await JSRuntime.InvokeAsync<string>("getFromLocalStorage", "todos");
        if (!string.IsNullOrEmpty(storedTodos))
        {
            todos = JsonSerializer.Deserialize<List<TodoItem>>(storedTodos);
        }
    }

    private async void AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(newTodo))
        {
            todos.Add(new TodoItem { Title = newTodo });
            newTodo = "";
            await SaveTodos();
        }
    }

    private async Task SaveTodos()
    {
        var serializedTodos = JsonSerializer.Serialize(todos);
        await JSRuntime.InvokeAsync<object>("saveToLocalStorage", "todos", serializedTodos);
    }

    private class TodoItem
    {
        public string Title { get; set; }
        public bool IsDone { get; set; }
    }
}

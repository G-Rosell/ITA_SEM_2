@page "/tictactoe"

<h3>Kryds-og-bolle</h3>

<table>
    @for (int i = 0; i < 3; i++)
    {
        int localRow = i;
        <tr>
            @for (int j = 0; j < 3; j++)
            {
                int localCol = j;
                <td @onclick="() => MarkCell(localRow, localCol)" data-player="@board[localRow,localCol]">
                    @if (board[localRow, localCol] != CellContent.Empty)
                    {
                        @board[localRow, localCol]
                    }
                </td>
            }
        </tr>
    }
</table>

@if (winner.HasValue)
{
    <p>Vinderen er: @winner.Value</p>
}

@code {
    enum CellContent
    {
        Empty,
        X,
        O
    }

    CellContent[,] board = new CellContent[3, 3];
    CellContent currentPlayer = CellContent.X;
    CellContent? winner = null;

    void MarkCell(int row, int col)
    {
        Console.WriteLine($"Row: {row}, Col: {col}"); // tester for at finde fejl

        // Check for valid indices before proceeding
        if (row < 0 || row >= 3 || col < 0 || col >= 3)
        {
            Console.WriteLine($"Invalid indices: Row: {row}, Col: {col}");
            return; // Exit early if indices are out of bounds
        }

        if (board[row, col] == CellContent.Empty && winner == null)
        {
            board[row, col] = currentPlayer;
            if (IsWinner(row, col))
            {
                winner = currentPlayer;
            }
            else
            {
                currentPlayer = (currentPlayer == CellContent.X) ? CellContent.O : CellContent.X;
            }
        }
        StateHasChanged();
    }


    bool IsWinner(int row, int col)
    {
        if (board[row, 0] == currentPlayer && board[row, 1] == currentPlayer && board[row, 2] == currentPlayer)
            return true;
        if (board[0, col] == currentPlayer && board[1, col] == currentPlayer && board[2, col] == currentPlayer)
            return true;
        if (row == col && board[0, 0] == currentPlayer && board[1, 1] == currentPlayer && board[2, 2] == currentPlayer)
            return true;
        if (row + col == 2 && board[0, 2] == currentPlayer && board[1, 1] == currentPlayer && board[2, 0] == currentPlayer)
            return true;

        return false;
    }
}
